apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-load-script
  namespace: gitlab
data:
  load-test.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export let options = {
      stages: [
        { duration: '2m', target: 5 },  // Ramp up
        { duration: '5m', target: 5 },  // Stay at 5 users
        { duration: '2m', target: 0 },  // Ramp down
      ],
    };

    export default function() {
      // Basic GitLab page load test - targeting GitLab webservice
      let response = http.get('http://gitlab-webservice-default.gitlab.svc.cluster.local:8080');
      check(response, {
        'status is 200': (r) => r.status === 200,
        'response time < 2s': (r) => r.timings.duration < 2000,
      });
      
      // Also test the health endpoint
      let healthResponse = http.get('http://gitlab-webservice-default.gitlab.svc.cluster.local:8080/-/health');
      check(healthResponse, {
        'health check is 200': (r) => r.status === 200,
      });
      
      sleep(1);
    }

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gitlab-load-test
  namespace: gitlab
spec:
  schedule: "*/10 * * * *"  # Every 10 minutes
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: k6-load-test
            image: grafana/k6:latest
            command: ["k6", "run", "/scripts/load-test.js"]
            volumeMounts:
            - name: script-volume
              mountPath: /scripts
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
          volumes:
          - name: script-volume
            configMap:
              name: gitlab-load-script
          restartPolicy: OnFailure
      backoffLimit: 3
      ttlSecondsAfterFinished: 300 