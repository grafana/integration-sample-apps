cluster:
  name: gitlab-sample-app-cluster

externalServices:
  prometheus:
    host: "http://192.168.64.4:9009"
    basicAuth:
      username: "your_prometheus_username"
      password: "your_prometheus_password"
    writeEndpoint: "/api/v1/push"
    
  loki:
    host: "http://192.168.64.4:3100"
    basicAuth:
      username: "your_loki_username"
      password: "your_loki_password"
    writeEndpoint: "/loki/api/v1/push"


alloy-metrics:
  extraConfig: |-
    discovery.kubernetes "gitlab" {
        role = "pod"
        selectors {
            role = "pod"
            label = "app.kubernetes.io/name=gitlab"
        }
    }


logs:
  enabled: true
  extraConfig: |-
    discovery.relabel "gitlab_logs" {
      targets = discovery.kubernetes.pods.targets

      rule {
        action        = "keep"
        source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
        regex         = "gitlab"
      }
      
      rule {
        action        = "keep"
        source_labels = ["__meta_kubernetes_namespace"]
        regex         = "gitlab"
      }

      rule {
        target_label = "job"
        replacement = "integrations/gitlab"
      }
      
      rule {
        source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_name"]
        separator = "-"
        target_label = "instance"
      }
      
      rule {
        action = "replace"
        source_labels = ["__meta_kubernetes_pod_name"]
        target_label  = "pod"
      }
    }

    loki.source.kubernetes "gitlab_logs" {
      targets    = discovery.relabel.gitlab_logs.output
      forward_to = [loki.process.gitlab_logs.receiver]
    }

    loki.process "gitlab_logs" {
      forward_to = [loki.process.logs_service.receiver]
      
      stage.cri {}
      
      stage.regex {
        expression = `^\{"severity":"(?P<severity>ERROR|WARN|INFO|DEBUG)","time":"(?P<time>[^"]+)","correlation_id":"(?P<correlation_id>[^"]+)","exception.class":"(?P<exception_class>[^"]+)",.*$`
      }

      stage.labels {
        values = {
          severity = "",
          correlation_id = "",
          exception_class = "",
        }
      }

      stage.template {
        source   = "instance"
        template = "{{ .namespace }}-{{ .container }}"
      }
    }

metrics:
  cost:
    enabled: false

opencost:
  enabled: false
